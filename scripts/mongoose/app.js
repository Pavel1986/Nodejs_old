var Express = require('express')  , Http = require('http' )  , Path = require('path')  , fs = require('fs')  , Dot = require('dot')  , async = require('async');var Mongoose = require('mongoose').connect('mongodb://debates:debates782615@127.0.0.1/debates');var TopicModel = require('../../core/modules/debates/debatesSchemes').DebateModels.Topic;var CookieSession = require('../../core/modules/cookies/sessionSchemes').CookieModel;var App = Express();App.configure(function(){  App.set('port', 3000);//  App.use(Express.logger('dev')); // Время генерации страницы  App.use(Express.compress());  //Шаблонизация    App.set('view engine', Dot);  App.enable('view cache');  App.set('views', __dirname + '/views');  App.engine('.html', require('express-dot').__express);    App.use(Express.favicon());  App.use(Express.bodyParser());  App.use(Express.methodOverride());  //Стили  App.use(require('stylus').middleware(__dirname + '/public'));  App.use(Express.static(__dirname + '/public'));  App.use(Express.static(Path.join(__dirname, 'public')));});App.configure('development', function(){ App.use(Express.errorHandler());});App.get('/', function(Req, Res){    /* Запись обсуждения в базу данных    var DebatePropertiesSchema = new Mongoose.Schema({        String : { type : String },        Number : { type : Number },        Array  : { type : Array },        Array2 : {},        Mixed  : {}    }, { collection : "debates" });    var Schema_model = Mongoose.model('Schema_model', DebatePropertiesSchema);    var Model_Instance = new Schema_model({        String : "StringValue",        Number : 1234567890,        Array  : [ 1, "2", "Три", "četri" ],        Mixed  : {            String : "StringValue",            Array : [ 1, "2", "Три", "četri" ]        }    });    var Array2 = Model_Instance.Array2 = new Array;    Array2.push("ArrayValue");    Model_Instance.save();*/     /*    */    TopicModel.findByIdAndRemove("5398424c77fb645164aeef84", function(Result){        console.log(Result);    });    /*    TopicModel.find( { $or : [ { Status_code : "Opened" }, { Status_code : "Processing" } ], Members : "52460f23334434032a000001", Language : "en" }, function(err, doc){        if(err){            console.log("Error");        }        if(doc){            console.log(doc);        }    })       */    //CookieSession.findByIdAndUpdate("J1qYYd7MsW258rqnaLnyNQsx",{ $set : { session : "works" } }, function(err, doc){    //CookieSession.findByIdAndUpdate("J1qYYd7MsW258rqnaLnyNQsx", { session : "works yeah!!!" }, echo_works() );   /* CookieSession.findByIdAndUpdate("J1qYYd7MsW258rqnaLnyNQsx", { session : "works yeah!" } , function(err, doc){        if(err){ console.log(err); } if(doc){ console.log(doc); } else{ console.log('Error while updating document'); } });  */    Res.render('index.html', {        title : "Index",        layout: false    });});Server = Http.createServer(App)    , Io = require('socket.io').listen(Server);Server.listen(App.get('port'), function(){    console.log("Server listening on port " + App.get('port'));});