var Express = require('express')  , Http = require('http' )  , Path = require('path')  , fs = require('fs')  , Dot = require('dot')  , async = require('async');var App = Express();App.configure(function(){  App.set('port', 3000);//  App.use(Express.logger('dev')); // Время генерации страницы  App.use(Express.compress());  //Шаблонизация    App.set('view engine', Dot);  App.enable('view cache');  App.set('views', __dirname + '/views');  App.engine('.html', require('express-dot').__express);    App.use(Express.favicon());  App.use(Express.bodyParser());  App.use(Express.methodOverride());  //Стили  App.use(require('stylus').middleware(__dirname + '/public'));  App.use(Express.static(__dirname + '/public'));  App.use(Express.static(Path.join(__dirname, 'public')));});App.configure('development', function(){ App.use(Express.errorHandler());});App.get('/', function(Req, Res){    Res.render('index.html', {        title : "Index",        layout: false    });});App.get('/javascripts/*', function(Req, Res){    Res.contentType("text/javascript");    Res.sendfile(__dirname + '/public' + Req.url);});Server = Http.createServer(App)    , Io = require('socket.io').listen(Server);Server.listen(App.get('port'), function(){    console.log("Server listening on port " + App.get('port'));});var SocketRoom = "Topic";Io.on('connection', function (Socket) {    Socket.on('Join', function (Data) {        console.log('Join!');        Socket.join(SocketRoom);        console.log(SocketRoom);    });    Socket.on('Leave', function (Data) {        console.log('Leave!');        Socket.leave(SocketRoom);    });    Socket.on('Destroy', function (Data) {        console.log('Starting timer!');        var minute = 60 * 1000;        var setTime = 5 * minute;        console.log(new Date().toTimeString());        //Socket.emit('Message', 'Hello Timer!')        setTimeout(function(){ console.log( new Date().toTimeString()) }, setTime);    });    Socket.on('Send', function (Data) {        console.log("Client message reiceved!");        //Io.sockets.emit('Message', "Hello");        Io.sockets.in(SocketRoom).emit('Message', 'Hello');        //Socket.emit('Message', "Hello"); //emit to all sockets except this one    });});